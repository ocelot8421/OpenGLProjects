-- How to install OpenGL for C++ (Windows)
https://www.youtube.com/watch?v=hRInLNR9iRg
    cd bin -- ne felejts el belépni a bin-be
    mingw32-make
    .\main.exe -- ne felejtsd el a szülőmappát is hozzácsapni a path-hoz

-- missing separator
bin> mingw32-make
Makefile:2: *** missing separator.  Stop.
Solved: https://www.youtube.com/watch?v=2nM6DBE0blA
    View/Command Palette --> Convert Indentation  to tabs

-- magnitude
Michael Grieco -- C++ Open GL Tutorial - 2 - Hello, OpenGL
https://www.youtube.com/watch?v=bQ3CPgw4lxY&list=PLysLvOneEETPlOI_PI4mJnocqIpr2cSHS&index=2
magnitude ||u|| = "length"

-- Homogeneous Coordinate example
https://www.tomdalling.com/blog/modern-opengl/explaining-homogenous-coordinates-and-projective-geometry/

-- glViewport(0, 0, 900, 600);
Hello Window: https://learnopengl.com/Getting-started/Hello-Window
4.1. 2d képszintézis: Bevezetés: https://www.youtube.com/watch?v=-fX0UT2umIM&list=PLiH4g_VR3i0Pz0vAyjPzPCXDqLqHPfW2p&index=15

-- Translation, Rotation, Scaling matrix
#include <iostream>
#include <iomanip>
void printVector (int i, glm::vec4 vector);
void printMatrix (int i, int j, glm::mat4 matrix, std::string title);
//GLM test
//	glm::vec4 vec(1.0f, 0.0f, 0.0f, 1.0f);						
//	std::cout << "vec: " << std::endl;
//	printVector(4, vec);
//	glm::mat4 trans = glm::mat4(1.0f); 							
//	trans = glm::translate(trans, glm::vec3(1.0f, 1.0f, 0.0f)); 						
//    trans = glm::rotate(trans, glm::radians(90.0f), glm::vec3(0.0, 0.0, 1.0));
//	trans = glm::scale(trans, glm::vec3(0.5, 0.5, 0.5));
//	printMatrix(4, 4, trans, "trans: ");
//	vec = trans * vec;											
//	std::cout << "trans * vec: " << std::endl;
//	printVector(4, vec);
void printMatrix (int i, int j, glm::mat4 matrix, std::string title){
std::cout << title << std::endl;
	for (int i = 0; i < 4; i++){
		printVector(4, matrix[i]);
    }
}
void printVector (int i, glm::vec4 vector){
    for (int j = 0; j < 4; j++){
	    std::cout << std::setw(12) << vector[j] << ' ';
    }
	std::cout << std::endl;
}

-- Vertex shader (Csúcspontárnyaló shader)
Michael Grieco - C++ OpenGL Tutorial - 7 - Displaying Shapes -- https://youtu.be/4JAwK4lzrF8?list=PLysLvOneEETPlOI_PI4mJnocqIpr2cSHS&t=489
Laszlo Szirmay-Kalos - 0. Számítógépes grafika: Bevezetés -- https://youtu.be/enFszxj6hfA?list=PLiH4g_VR3i0Pz0vAyjPzPCXDqLqHPfW2p&t=869
learnopengl.com -- https://learnopengl.com/Getting-started/Hello-Triangle#:~:text=start%20building%20those.-,Vertex%20shader,-The%20vertex%20shader

-- Fragment shader / Pixel shader
Michael Grieco - C++ OpenGL Tutorial - 7 - Displaying Shapes -- https://youtu.be/4JAwK4lzrF8?list=PLysLvOneEETPlOI_PI4mJnocqIpr2cSHS&t=569
Laszlo Szirmay-Kalos - 0. Számítógépes grafika: Bevezetés -- https://youtu.be/enFszxj6hfA?list=PLiH4g_VR3i0Pz0vAyjPzPCXDqLqHPfW2p&t=1006
learnopengl.com -- https://learnopengl.com/Getting-started/Hello-Triangle#:~:text=is%20now%20compiled.-,Fragment%20shader,-The%20fragment%20shader

-- triangle finished
Michael Grieco - C++ OpenGL Tutorial - 7 - Displaying Shapes -- https://youtu.be/4JAwK4lzrF8?list=PLysLvOneEETPlOI_PI4mJnocqIpr2cSHS&t=2468
Laszlo Szirmay-Kalos - 0. Számítógépes grafika: Bevezetés -- https://youtu.be/enFszxj6hfA?list=PLiH4g_VR3i0Pz0vAyjPzPCXDqLqHPfW2p&t=742

-- CPU init
Laszlo Szirmay-Kalos - 0. Számítógépes grafika: Bevezetés -- 

-- CPU draw

